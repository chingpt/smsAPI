##################################################
# file: smsclould_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     C:\Python27\Scripts\wsdl2py-script.py -a http://114.80.200.100:8081/axis2/services/smsclould?wsdl
# 
##################################################

from smsclould_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class smsclouldLocator:
    smsclouldHttpSoap11Endpoint_address = "http://114.80.200.100:8081/axis2/services/smsclould.smsclouldHttpSoap11Endpoint/"
    def getsmsclouldHttpSoap11EndpointAddress(self):
        return smsclouldLocator.smsclouldHttpSoap11Endpoint_address
    def getsmsclouldHttpSoap11Endpoint(self, url=None, **kw):
        return smsclouldSoap11BindingSOAP(url or smsclouldLocator.smsclouldHttpSoap11Endpoint_address, **kw)

# Methods
class smsclouldSoap11BindingSOAP:
    def __init__(self, url, endPointReference=None, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        self.endPointReference = endPointReference

    # op: getStatusByTime
    def getStatusByTime(self, request, **kw):
        if isinstance(request, getStatusByTimeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        wsaction = "urn:getStatusByTime"
        self.binding.Send(None, None, request, soapaction="urn:getStatusByTime", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "urn:getStatusByTimeResponse"
        response = self.binding.Receive(getStatusByTimeResponse.typecode, wsaction=wsaction)
        return response

    # op: getStatusById
    def getStatusById(self, request, **kw):
        if isinstance(request, getStatusByIdRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        wsaction = "urn:getStatusById"
        self.binding.Send(None, None, request, soapaction="urn:getStatusById", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "urn:getStatusByIdResponse"
        response = self.binding.Receive(getStatusByIdResponse.typecode, wsaction=wsaction)
        return response

    # op: sendsms
    def sendsms(self, request, **kw):
        if isinstance(request, sendsmsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        wsaction = "urn:sendsms"
        self.binding.Send(None, None, request, soapaction="urn:sendsms", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "urn:sendsmsResponse"
        response = self.binding.Receive(sendsmsResponse.typecode, wsaction=wsaction)
        return response

    # op: checkBalance
    def checkBalance(self, request, **kw):
        if isinstance(request, checkBalanceRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        wsaction = "urn:checkBalance"
        self.binding.Send(None, None, request, soapaction="urn:checkBalance", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "urn:checkBalanceResponse"
        response = self.binding.Receive(checkBalanceResponse.typecode, wsaction=wsaction)
        return response

    # op: getReplyByTime
    def getReplyByTime(self, request, **kw):
        if isinstance(request, getReplyByTimeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        wsaction = "urn:getReplyByTime"
        self.binding.Send(None, None, request, soapaction="urn:getReplyByTime", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "urn:getReplyByTimeResponse"
        response = self.binding.Receive(getReplyByTimeResponse.typecode, wsaction=wsaction)
        return response

getStatusByTimeRequest = GED("http://yupsms.com", "getStatusByTime").pyclass

getStatusByTimeResponse = GED("http://yupsms.com", "getStatusByTimeResponse").pyclass

getStatusByIdRequest = GED("http://yupsms.com", "getStatusById").pyclass

getStatusByIdResponse = GED("http://yupsms.com", "getStatusByIdResponse").pyclass

sendsmsRequest = GED("http://yupsms.com", "sendsms").pyclass

sendsmsResponse = GED("http://yupsms.com", "sendsmsResponse").pyclass

checkBalanceRequest = GED("http://yupsms.com", "checkBalance").pyclass

checkBalanceResponse = GED("http://yupsms.com", "checkBalanceResponse").pyclass

getReplyByTimeRequest = GED("http://yupsms.com", "getReplyByTime").pyclass

getReplyByTimeResponse = GED("http://yupsms.com", "getReplyByTimeResponse").pyclass
